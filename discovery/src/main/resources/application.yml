server:
  port: 8761

spring:
  security:
    user:
      name: eureka
      password: admin
      roles: SYSTEM

eureka:
  instance:
    instanceId: ${spring.application.name}:${vcap.application.instance_id:${spring.application.instance_id:${random.value}}}
    lease-expiration-duration-in-seconds: 10
  client:
    registerWithEureka: false
    fetchRegistry: false
    serviceUrl:
          defaultZone: ${EUREKA_URL:http://localhost:8761}/eureka/
  server:
    enableSelfPreservation: true
    waitTimeInMsWhenSyncEmpty: 0

---
spring:
  profiles: peer # not standalone
eureka:
  instance:
    hostname: 127.0.1.1
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://user:${eureka.password}@127.0.0.1:8762/eureka/

---
spring:
  profiles: other # not standalone
server:
  port: 8762
eureka:
  instance:
    hostname: 127.0.0.1
    nonSecurePort: ${server.port}
  client:
    serviceUrl:
      defaultZone: http://user:${eureka.password}@127.0.1.1:8761/eureka/

---
spring:
  profiles: local # connect to remote peer
eureka:
  instance:
    hostname: ${localhost.hostname:${localhost.ngrok}.ngrok.com}
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://user:${eureka.password}@${PREFIX:}eureka.cfapps.io/eureka/